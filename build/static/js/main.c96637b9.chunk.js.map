{"version":3,"sources":["components/Person.js","components/PersonForm.js","components/Filter.js","service/persons.js","components/Notification.js","App.js","index.js"],"names":["Person","filtered","handleDelete","map","person","key","name","number","onClick","PersonForm","props","onSubmit","value","nameValue","onChange","onNameChange","numberValue","onNumberChange","type","Filter","filter","baseUrl","axios","get","then","response","data","newObject","post","id","delete","request","put","Notification","message","className","App","useState","setFilter","persons","setPersons","newName","setNewName","newNumber","setNewNumber","setMessage","notificationType","setNotificationType","useEffect","personService","initialPersons","console","log","notificationShow","msg","err","setTimeout","toUpperCase","includes","trim","event","target","preventDefault","personObject","window","confirm","find","p","returnedPerson","catch","error","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c96637b9.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Person = ({ filtered, handleDelete }) => {\r\n\r\n    return (\r\n\r\n    filtered.map((person) =>\r\n        <p key={person.name}>\r\n            {person.name}: {person.number}\r\n        <button onClick={() => handleDelete(person)}>Delete</button>\r\n        </p>\r\n    )\r\n    )\r\n}\r\n\r\nexport default Person","import React from 'react'\r\n\r\n\r\nconst PersonForm = (props) => {\r\n\r\n    return (\r\n        <div>\r\n        <form onSubmit={props.onSubmit}>\r\n        <div>\r\n          name: <input\r\n            value={props.nameValue}\r\n            onChange={props.onNameChange} />\r\n        </div>\r\n        <div>\r\n          number: <input\r\n            value={props.numberValue}\r\n            onChange={props.onNumberChange} />\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n      </form>\r\n        </div>\r\n    )\r\n}\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst Filter = (props) => {\r\n\r\n\r\n    return (\r\n        <div>\r\n        filter shown with <input value={props.filter}\r\n                              onChange={props.onChange}\r\n                        />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filter","import axios from 'axios'\r\nconst baseUrl = 'http://localhost:3001/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst del = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(request => request.data)\r\n}\r\n\r\nexport default { getAll, create, del, update }","import React from 'react'\r\n\r\nconst Notification = ({ message, className }) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n  \r\n    return (\r\n      <div className={className}>\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default Notification","import React, { useState, useEffect } from 'react'\nimport Person from './components/Person'\nimport PersonForm from './components/PersonForm'\nimport Filter from './components/Filter'\nimport personService from './service/persons'\nimport Notification from './components/Notification'\n\nconst App = () => {\n\n  const [filter, setFilter] = useState('');\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [message, setMessage] = useState(null)\n  const [notificationType, setNotificationType] = useState('err')\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n        console.log(initialPersons)\n      })\n  }, [])\n\n  const notificationShow = (msg, err) => {\n    if (err) {\n      setNotificationType('err')\n    }\n    else {\n      setNotificationType('success')\n    }\n    setMessage(msg)\n    setTimeout(() => {\n      setMessage(null)\n    }, 5000)\n  }\n\n  const addName = event => {\n    event.preventDefault();\n    const personObject = {\n      name: newName,\n      number: newNumber\n    }\n    \n    const names = persons.map(person => person.name)\n    if (!names.includes(personObject.name)) {\n\n      personService\n        .create(personObject)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          notificationShow(`${returnedPerson.name} was added to phonebook!`, false)\n        })\n      setNewName('');\n      setNewNumber('');\n\n    }\n    else {\n      if (window.confirm(`${newName} is already added to phonebook, replace old number with new one?`)) {\n        const id = persons.find(p => p.name === newName).id\n        const personObject = {\n          name: newName,\n          number: newNumber\n        }\n        personService\n          .update(id, personObject)\n          .then(returnedPerson => {\n            setPersons(\n              persons.map(person => person.id === id ? returnedPerson : person)\n            )\n            notificationShow(`${returnedPerson.name} was updated succesfully!`, false)\n          })\n          .catch(error => {\n            notificationShow(`${newName} does not exist in the server!`, true)\n            setPersons(persons.filter(person => person.name !== newName))\n          })\n      }\n\n    }\n  }\n\n  const handleDelete = (person) => {\n    console.log(person.id);\n    if (window.confirm(`Do you really want tot delete ${person.name}?`)) {\n\n      personService\n        .del(person.id)\n        .then(data => {\n          setPersons(persons.filter(p => p.id !== person.id))\n          notificationShow(`${person.name} deleted from phonebook`, false)\n        })\n        .catch(error => {\n          notificationShow(`${person.name} does not exist in the phonebook anymore!`, true)\n          setPersons(persons.filter(p => p.id !== person.id))\n\n        })\n    }\n  }\n\n  const handleNameChange = (event) => {\n    console.log(event.target.value)\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    console.log(event.target.value)\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    setFilter(event.target.value)\n  }\n\n  const filtered =\n    persons.filter(person =>\n      person.name.toUpperCase().includes(filter.trim().toUpperCase()))\n\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} className={notificationType}/>\n      <Filter value={filter}\n        onChange={handleFilterChange} />\n      <h3>Add a new number</h3>\n      <PersonForm onSubmit={addName}\n        onNameChange={handleNameChange}\n        nameValue={newName}\n        onNumberChange={handleNumberChange}\n        numberValue={newNumber} />\n      <h3>Numbers</h3>\n      <Person filtered={filtered} handleDelete={handleDelete} />\n    </div>\n  )\n\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n"],"sourceRoot":""}